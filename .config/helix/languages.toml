[language-server]
clangd = { command = "clangd", args = ["--background-index", "--clang-tidy"] }
eslint = { command = "vscode-eslint-language-server", args = ["--stdio"] }
jdtls = { command = "jdtls", args = ["-configuration ~/.cache/jdtls", "-data ~/.cache/jdtls/workspace"] }
emmet-ls = { command = "emmet-language-server", args = ["--stdio"]}
zk = { command = "zk", args = ["lsp"] }

[lanuage-server.eslint.config]
nodePath = ""
quiet = false
onIgnoredFiles = "off"
run = "onType"
rulesCustomizations = []
validate = "on"
codeAction = {disableRuleComment = {enable = true, location = "separateLine"}, showDocumentation = { enable = false }}
codeActionOnSave = { mode = "all", "source.fixAll.elint" = true }
experimental = {}
problems = { shortenToSingleLine = false }

[language-server.pylsp.plugins]
yflakes = {enabled = false}
mccabe = {enabled = false}
pyls_isort = {enabled = false}
pycodestyle = {enabled = false, maxLineLength = 88}
pydocstyle = {enabled = false}
autopep8 = {enabled = false}
yapf = {enabled = false}
flake8 = {enabled = false}
pylint = {enabled = false}
ruff = {enabled = true, extendSelect = ["I"]}
mypy = {enabled = true, live_mode = true, strict = true}

[[language]]
name = "rust"
auto-format = true

[[language]]
name = "c"
indent = { tab-width = 4, unit = "    " }
language-servers = ["clangd"]
auto-format = true

[[language]]
name = "cpp"
indent = { tab-width = 4, unit = "    " }
language-servers = ["clangd"]
auto-format = true

[[language]]
name = "python"
language-servers = ["pylsp"]
formatter = { command = "black", args = ["--quiet", "-"] }
roots = ["pyproject.toml", "pyproject.lock", "requirements.txt"]
auto-format = true

[[language]]
name = "java"
roots = ["build.xml", "pom.xml", "build.gradle"]

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
formatter = { command = "npx", args=["prettier","--parser","typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
formatter = { command = "npx", args=["prettier","--parser","typescript"] }
auto-format = true

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
formatter = { command = "npx", args=["prettier","--parser","typescript"] }
auto-format = true

[[language]]
name = "jsx"
language-servers = ["typescript-language-server", "eslint", "emmet-ls"]
formatter = { command = "npx", args=["prettier","--parser","typescript"] }
auto-format = true

[[language]]
name = "json"
language-servers = ["vscode-json-language-server"]
formatter = { command="npx", args=["prettier","--parser","json"]}
auto-format = true

[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "emmet-ls"]
formatter = { command="npx", args=["prettier", "--parser", "html"]}
auto-format = true

[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "emmet-ls"]
formatter = { command="npx", args=["prettier", "--parser", "css"]}
auto-format = true

[[language]]
name = "yaml"
file-types = ["yaml", "yml"]
language-servers = ["yaml-language-server"]
indent = { tab-width = 2, unit = "  " }
formatter = { command = "npx", args = ["prettier", "--parser", "yaml"] }
auto-format = true

[[language]]
name = "markdown"
language-servers = ["marksman", "zk"]
formatter = { command = "npx", args = ["prettier", "--parser", "markdown"] }
soft-wrap.enable = true
soft-wrap.wrap-at-text-width = true
